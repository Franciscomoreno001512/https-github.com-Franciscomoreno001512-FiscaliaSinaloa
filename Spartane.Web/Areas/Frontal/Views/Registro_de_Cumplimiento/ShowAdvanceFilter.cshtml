@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Registro_de_CumplimientoAdvanceSearchModel
@{
 List<SelectListItem> varRegistro_de_Mandamiento_Judicial_Mandamiento_Judicial = null;
    if (ViewBag.Registro_de_Mandamiento_Judicials_Mandamiento_Judicial != null)
    { varRegistro_de_Mandamiento_Judicial_Mandamiento_Judicial = (List<SelectListItem>)ViewBag.Registro_de_Mandamiento_Judicials_Mandamiento_Judicial; }
 List<SelectListItem> varSpartan_User_Usuario_de_Registro = null;
    if (ViewBag.Spartan_Users_Usuario_de_Registro != null)
    { varSpartan_User_Usuario_de_Registro = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_de_Registro; }
    List<SelectListItem> varResolucion_de_Mandamiento_Judicial_Resolucion = null;
    if (ViewBag.Resolucion_de_Mandamiento_Judicials_Resolucion != null)
    { varResolucion_de_Mandamiento_Judicial_Resolucion = (List<SelectListItem>)ViewBag.Resolucion_de_Mandamiento_Judicials_Resolucion; }
    List<SelectListItem> varPartida_que_Cumplimenta_Partida_que_cumplimenta = null;
    if (ViewBag.Partida_que_Cumplimentas_Partida_que_cumplimenta != null)
    { varPartida_que_Cumplimenta_Partida_que_cumplimenta = (List<SelectListItem>)ViewBag.Partida_que_Cumplimentas_Partida_que_cumplimenta; }
 List<SelectListItem> varArea_envia_Cumplimiento_Area_que_envia_cumplimiento = null;
    if (ViewBag.Area_envia_Cumplimientos_Area_que_envia_cumplimiento != null)
    { varArea_envia_Cumplimiento_Area_que_envia_cumplimiento = (List<SelectListItem>)ViewBag.Area_envia_Cumplimientos_Area_que_envia_cumplimiento; }
 List<SelectListItem> varEstado_Estado = null;
    if (ViewBag.Estados_Estado != null)
    { varEstado_Estado = (List<SelectListItem>)ViewBag.Estados_Estado; }
 List<SelectListItem> varMunicipio_Municipio = null;
    if (ViewBag.Municipios_Municipio != null)
    { varMunicipio_Municipio = (List<SelectListItem>)ViewBag.Municipios_Municipio; }
 List<SelectListItem> varColonia_Poblacion = null;
    if (ViewBag.Colonias_Poblacion != null)
    { varColonia_Poblacion = (List<SelectListItem>)ViewBag.Colonias_Poblacion; }
 List<SelectListItem> varColonia_Colonia = null;
    if (ViewBag.Colonias_Colonia != null)
    { varColonia_Colonia = (List<SelectListItem>)ViewBag.Colonias_Colonia; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Registro_de_Cumplimiento", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Registro_de_CumplimientoResources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
 List<SelectListItem> varRegistro_de_Mandamiento_Judicial_Mandamiento_Judicial = null;
    if (ViewBag.Registro_de_Mandamiento_Judicials_Mandamiento_Judicial != null)
    { varRegistro_de_Mandamiento_Judicial_Mandamiento_Judicial = (List<SelectListItem>)ViewBag.Registro_de_Mandamiento_Judicials_Mandamiento_Judicial; }
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_CumplimientoResources.Fecha_de_Registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_Registro" name="FromFecha_de_Registro" type="text" value="@Model.FromFecha_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_Registro" name="ToFecha_de_Registro" type="text" value="@Model.ToFecha_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_CumplimientoResources.Hora_de_Registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_Registro" name="FromHora_de_Registro" type="text" value="@Model.FromHora_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_Registro" name="ToHora_de_Registro" type="text" value="@Model.ToHora_de_Registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
 List<SelectListItem> varSpartan_User_Usuario_de_Registro = null;
    if (ViewBag.Spartan_Users_Usuario_de_Registro != null)
    { varSpartan_User_Usuario_de_Registro = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_de_Registro; }
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_CumplimientoResources.Resolucion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ResolucionFilter, filters, new { @class = "form-control", @id = "ddlResolucionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceResolucion, new { @class = "form-control", @type = "text", @id = "txtAdvanceResolucion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varResolucion_de_Mandamiento_Judicial_Resolucion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceResolucionMultiple, varResolucion_de_Mandamiento_Judicial_Resolucion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceResolucion"
                        });
                    }
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Registro_de_CumplimientoResources.Fecha_de_Resolucion</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_Resolucion" name="FromFecha_de_Resolucion" type="text" value="@Model.FromFecha_de_Resolucion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_Resolucion" name="ToFecha_de_Resolucion" type="text" value="@Model.ToFecha_de_Resolucion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_CumplimientoResources.Numero_de_Oficio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_OficioFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_OficioFilter" })
                    @Html.TextBoxFor(m => m.Numero_de_Oficio, new { @class = "form-control", @type = "text", @id = "txtNumero_de_Oficio" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_CumplimientoResources.Radiograma</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.RadiogramaFilter, filters, new { @class = "form-control", @id = "ddlRadiogramaFilter" })
                    @Html.TextBoxFor(m => m.Radiograma, new { @class = "form-control", @type = "text", @id = "txtRadiograma" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_CumplimientoResources.Partida_que_cumplimenta</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Partida_que_cumplimentaFilter, filters, new { @class = "form-control", @id = "ddlPartida_que_cumplimentaFilter" })
                    @Html.TextBoxFor(m => m.AdvancePartida_que_cumplimenta, new { @class = "form-control", @type = "text", @id = "txtAdvancePartida_que_cumplimenta" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varPartida_que_Cumplimenta_Partida_que_cumplimenta!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvancePartida_que_cumplimentaMultiple, varPartida_que_Cumplimenta_Partida_que_cumplimenta,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvancePartida_que_cumplimenta"
                        });
                    }
                </div>
 List<SelectListItem> varArea_envia_Cumplimiento_Area_que_envia_cumplimiento = null;
    if (ViewBag.Area_envia_Cumplimientos_Area_que_envia_cumplimiento != null)
    { varArea_envia_Cumplimiento_Area_que_envia_cumplimiento = (List<SelectListItem>)ViewBag.Area_envia_Cumplimientos_Area_que_envia_cumplimiento; }
 List<SelectListItem> varEstado_Estado = null;
    if (ViewBag.Estados_Estado != null)
    { varEstado_Estado = (List<SelectListItem>)ViewBag.Estados_Estado; }
 List<SelectListItem> varMunicipio_Municipio = null;
    if (ViewBag.Municipios_Municipio != null)
    { varMunicipio_Municipio = (List<SelectListItem>)ViewBag.Municipios_Municipio; }
 List<SelectListItem> varColonia_Poblacion = null;
    if (ViewBag.Colonias_Poblacion != null)
    { varColonia_Poblacion = (List<SelectListItem>)ViewBag.Colonias_Poblacion; }
 List<SelectListItem> varColonia_Colonia = null;
    if (ViewBag.Colonias_Colonia != null)
    { varColonia_Colonia = (List<SelectListItem>)ViewBag.Colonias_Colonia; }
                <div class="MarginBottom">
                    <h3>@Resources.Registro_de_CumplimientoResources.Observaciones_del_Cumplimiento</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Observaciones_del_CumplimientoFilter, filters, new { @class = "form-control", @id = "ddlObservaciones_del_CumplimientoFilter" })
                    @Html.TextBoxFor(m => m.Observaciones_del_Cumplimiento, new { @class = "form-control", @type = "text", @id = "txtObservaciones_del_Cumplimiento" })
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Registro_de_Cumplimiento/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.Registro_de_CumplimientoClaveTo = $("#txtAdvanceToClave").val();
        }
        advanceSearch.Mandamiento_JudicialSearchType = 0;
        if ($('#ddlAdvanceMandamiento_Judicial').val().length > 0 || $("#txtAdvanceMandamiento_Judicial").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.Mandamiento_JudicialName = $("#txtAdvanceMandamiento_Judicial").val();
                advanceSearch.Mandamiento_JudicialNameSearchType = $("#ddlAdvanceMandamiento_Judicial").val();
                advanceSearch.Mandamiento_JudicialSearchType = 1;
            }
            else {

                advanceSearch.Mandamiento_JudicialToSearch = $("#ddlAdvanceMandamiento_Judicial").val();
                advanceSearch.Mandamiento_JudicialSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromFecha_de_Registro").val() != "" || $("#txtAdvanceToFecha_de_Registro").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoFecha_de_RegistroFrom = $("#txtAdvanceFromFecha_de_Registro").val();
            advanceSearch.Registro_de_CumplimientoFecha_de_RegistroTo = $("#txtAdvanceToFecha_de_Registro").val();
        }
        if ($("#txtAdvanceHora_de_Registro").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoHora_de_Registro = $("#txtAdvanceHora_de_Registro").val();
            advanceSearch.Registro_de_CumplimientoHora_de_RegistroSearchType = $("#ddlAdvanceHora_de_RegistroFilter").val();
        }
        advanceSearch.Usuario_de_RegistroSearchType = 0;
        if ($('#ddlAdvanceUsuario_de_Registro').val().length > 0 || $("#txtAdvanceUsuario_de_Registro").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.Usuario_de_RegistroName = $("#txtAdvanceUsuario_de_Registro").val();
                advanceSearch.Usuario_de_RegistroNameSearchType = $("#ddlAdvanceUsuario_de_Registro").val();
                advanceSearch.Usuario_de_RegistroSearchType = 1;
            }
            else {

                advanceSearch.Usuario_de_RegistroToSearch = $("#ddlAdvanceUsuario_de_Registro").val();
                advanceSearch.Usuario_de_RegistroSearchType = 2;
            }
        }
        advanceSearch.ResolucionSearchType = 0;
        if ($('#ddlAdvanceResolucion').val().length > 0 || $("#txtAdvanceResolucion").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.ResolucionName = $("#txtAdvanceResolucion").val();
                advanceSearch.ResolucionNameSearchType = $("#ddlAdvanceResolucion").val();
                advanceSearch.ResolucionSearchType = 1;
            }
            else {

                advanceSearch.ResolucionToSearch = $("#ddlAdvanceResolucion").val();
                advanceSearch.ResolucionSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromFecha_de_Resolucion").val() != "" || $("#txtAdvanceToFecha_de_Resolucion").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoFecha_de_ResolucionFrom = $("#txtAdvanceFromFecha_de_Resolucion").val();
            advanceSearch.Registro_de_CumplimientoFecha_de_ResolucionTo = $("#txtAdvanceToFecha_de_Resolucion").val();
        }
        if ($("#txtAdvanceNumero_de_Oficio").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoNumero_de_Oficio = $("#txtAdvanceNumero_de_Oficio").val();
            advanceSearch.Registro_de_CumplimientoNumero_de_OficioSearchType = $("#ddlAdvanceNumero_de_OficioFilter").val();
        }
        if ($("#txtAdvanceRadiograma").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoRadiograma = $("#txtAdvanceRadiograma").val();
            advanceSearch.Registro_de_CumplimientoRadiogramaSearchType = $("#ddlAdvanceRadiogramaFilter").val();
        }
        advanceSearch.Partida_que_cumplimentaSearchType = 0;
        if ($('#ddlAdvancePartida_que_cumplimenta').val().length > 0 || $("#txtAdvancePartida_que_cumplimenta").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.Partida_que_cumplimentaName = $("#txtAdvancePartida_que_cumplimenta").val();
                advanceSearch.Partida_que_cumplimentaNameSearchType = $("#ddlAdvancePartida_que_cumplimenta").val();
                advanceSearch.Partida_que_cumplimentaSearchType = 1;
            }
            else {

                advanceSearch.Partida_que_cumplimentaToSearch = $("#ddlAdvancePartida_que_cumplimenta").val();
                advanceSearch.Partida_que_cumplimentaSearchType = 2;
            }
        }
        advanceSearch.Area_que_envia_cumplimientoSearchType = 0;
        if ($('#ddlAdvanceArea_que_envia_cumplimiento').val().length > 0 || $("#txtAdvanceArea_que_envia_cumplimiento").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.Area_que_envia_cumplimientoName = $("#txtAdvanceArea_que_envia_cumplimiento").val();
                advanceSearch.Area_que_envia_cumplimientoNameSearchType = $("#ddlAdvanceArea_que_envia_cumplimiento").val();
                advanceSearch.Area_que_envia_cumplimientoSearchType = 1;
            }
            else {

                advanceSearch.Area_que_envia_cumplimientoToSearch = $("#ddlAdvanceArea_que_envia_cumplimiento").val();
                advanceSearch.Area_que_envia_cumplimientoSearchType = 2;
            }
        }
        advanceSearch.EstadoSearchType = 0;
        if ($('#ddlAdvanceEstado').val().length > 0 || $("#txtAdvanceEstado").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.EstadoName = $("#txtAdvanceEstado").val();
                advanceSearch.EstadoNameSearchType = $("#ddlAdvanceEstado").val();
                advanceSearch.EstadoSearchType = 1;
            }
            else {

                advanceSearch.EstadoToSearch = $("#ddlAdvanceEstado").val();
                advanceSearch.EstadoSearchType = 2;
            }
        }
        advanceSearch.MunicipioSearchType = 0;
        if ($('#ddlAdvanceMunicipio').val().length > 0 || $("#txtAdvanceMunicipio").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.MunicipioName = $("#txtAdvanceMunicipio").val();
                advanceSearch.MunicipioNameSearchType = $("#ddlAdvanceMunicipio").val();
                advanceSearch.MunicipioSearchType = 1;
            }
            else {

                advanceSearch.MunicipioToSearch = $("#ddlAdvanceMunicipio").val();
                advanceSearch.MunicipioSearchType = 2;
            }
        }
        advanceSearch.PoblacionSearchType = 0;
        if ($('#ddlAdvancePoblacion').val().length > 0 || $("#txtAdvancePoblacion").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.PoblacionName = $("#txtAdvancePoblacion").val();
                advanceSearch.PoblacionNameSearchType = $("#ddlAdvancePoblacion").val();
                advanceSearch.PoblacionSearchType = 1;
            }
            else {

                advanceSearch.PoblacionToSearch = $("#ddlAdvancePoblacion").val();
                advanceSearch.PoblacionSearchType = 2;
            }
        }
        advanceSearch.ColoniaSearchType = 0;
        if ($('#ddlAdvanceColonia').val().length > 0 || $("#txtAdvanceColonia").val() == "") {


            if (isRegistro_de_CumplimientoTextSearch) {
                advanceSearch.ColoniaName = $("#txtAdvanceColonia").val();
                advanceSearch.ColoniaNameSearchType = $("#ddlAdvanceColonia").val();
                advanceSearch.ColoniaSearchType = 1;
            }
            else {

                advanceSearch.ColoniaToSearch = $("#ddlAdvanceColonia").val();
                advanceSearch.ColoniaSearchType = 2;
            }
        }
        if ($("#txtAdvanceObservaciones_del_Cumplimiento").val() != "") {
            hasParameter = true;
            advanceSearch.Registro_de_CumplimientoObservaciones_del_Cumplimiento = $("#txtAdvanceObservaciones_del_Cumplimiento").val();
            advanceSearch.Registro_de_CumplimientoObservaciones_del_CumplimientoSearchType = $("#ddlAdvanceObservaciones_del_CumplimientoFilter").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblRegistro_de_Cumplimiento').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isRegistro_de_CumplimientoTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceMandamiento_Judicial").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceMandamiento_Judicial").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceMandamiento_Judicial").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceMandamiento_Judicial").val('');
        });
        $("#txtAdvanceUsuario_de_Registro").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceUsuario_de_Registro").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceUsuario_de_Registro").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceUsuario_de_Registro").val('');
        });
        $("#txtAdvanceResolucion").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceResolucion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceResolucion").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceResolucion").val('');
        });
        $("#txtAdvancePartida_que_cumplimenta").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvancePartida_que_cumplimenta").val('').trigger("chosen:updated");
        });

        $("#ddlAdvancePartida_que_cumplimenta").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvancePartida_que_cumplimenta").val('');
        });
        $("#txtAdvanceArea_que_envia_cumplimiento").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceArea_que_envia_cumplimiento").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceArea_que_envia_cumplimiento").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceArea_que_envia_cumplimiento").val('');
        });
        $("#txtAdvanceEstado").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceEstado").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstado").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceEstado").val('');
        });
        $("#txtAdvanceMunicipio").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceMunicipio").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceMunicipio").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceMunicipio").val('');
        });
        $("#txtAdvancePoblacion").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvancePoblacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvancePoblacion").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvancePoblacion").val('');
        });
        $("#txtAdvanceColonia").keypress(function () {
            isRegistro_de_CumplimientoTextSearch = true;
            $("#ddlAdvanceColonia").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceColonia").change(function () {
            isRegistro_de_CumplimientoTextSearch = false;
            $("#txtAdvanceColonia").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

