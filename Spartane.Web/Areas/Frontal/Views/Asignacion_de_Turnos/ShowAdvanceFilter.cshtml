@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Asignacion_de_TurnosAdvanceSearchModel
@{
    List<SelectListItem> varUnidad_Unidad_de_Atencion = null;
    if (ViewBag.Unidads_Unidad_de_Atencion != null)
    { varUnidad_Unidad_de_Atencion = (List<SelectListItem>)ViewBag.Unidads_Unidad_de_Atencion; }
    List<SelectListItem> varSpartan_User_Recepcion = null;
    if (ViewBag.Spartan_Users_Recepcion != null)
    { varSpartan_User_Recepcion = (List<SelectListItem>)ViewBag.Spartan_Users_Recepcion; }
    List<SelectListItem> varGenero_Sexo = null;
    if (ViewBag.Generos_Sexo != null)
    { varGenero_Sexo = (List<SelectListItem>)ViewBag.Generos_Sexo; }
    List<SelectListItem> varTipo_de_Atencion_Tipo_de_Atencion = null;
    if (ViewBag.Tipo_de_Atencions_Tipo_de_Atencion != null)
    { varTipo_de_Atencion_Tipo_de_Atencion = (List<SelectListItem>)ViewBag.Tipo_de_Atencions_Tipo_de_Atencion; }
    List<SelectListItem> varTipo_de_Identificacion_Tipo_de_Identificacion = null;
    if (ViewBag.Tipo_de_Identificacions_Tipo_de_Identificacion != null)
    { varTipo_de_Identificacion_Tipo_de_Identificacion = (List<SelectListItem>)ViewBag.Tipo_de_Identificacions_Tipo_de_Identificacion; }
    List<SelectListItem> varTipo_de_Urgencia_Tipo_de_Urgencia = null;
    if (ViewBag.Tipo_de_Urgencias_Tipo_de_Urgencia != null)
    { varTipo_de_Urgencia_Tipo_de_Urgencia = (List<SelectListItem>)ViewBag.Tipo_de_Urgencias_Tipo_de_Urgencia; }
 List<SelectListItem> varSolicitud_de_Denuncia_Ciudadana_Denuncia_Ciudadana = null;
    if (ViewBag.Solicitud_de_Denuncia_Ciudadanas_Denuncia_Ciudadana != null)
    { varSolicitud_de_Denuncia_Ciudadana_Denuncia_Ciudadana = (List<SelectListItem>)ViewBag.Solicitud_de_Denuncia_Ciudadanas_Denuncia_Ciudadana; }
 List<SelectListItem> varAsignacion_de_Turnos_Previos_Turno_Previo = null;
    if (ViewBag.Asignacion_de_Turnos_Previoss_Turno_Previo != null)
    { varAsignacion_de_Turnos_Previos_Turno_Previo = (List<SelectListItem>)ViewBag.Asignacion_de_Turnos_Previoss_Turno_Previo; }
    List<SelectListItem> varSpartan_User_Orientador = null;
    if (ViewBag.Spartan_Users_Orientador != null)
    { varSpartan_User_Orientador = (List<SelectListItem>)ViewBag.Spartan_Users_Orientador; }
    List<SelectListItem> varEstatus_de_Turno_Estatus_de_Turno = null;
    if (ViewBag.Estatus_de_Turnos_Estatus_de_Turno != null)
    { varEstatus_de_Turno_Estatus_de_Turno = (List<SelectListItem>)ViewBag.Estatus_de_Turnos_Estatus_de_Turno; }
    List<SelectListItem> varModulo_Modulo = null;
    if (ViewBag.Modulos_Modulo != null)
    { varModulo_Modulo = (List<SelectListItem>)ViewBag.Modulos_Modulo; }
    List<SelectListItem> varMotivo_Finalizacion_Turno_Motivo_Finalizacion_Turno = null;
    if (ViewBag.Motivo_Finalizacion_Turnos_Motivo_Finalizacion_Turno != null)
    { varMotivo_Finalizacion_Turno_Motivo_Finalizacion_Turno = (List<SelectListItem>)ViewBag.Motivo_Finalizacion_Turnos_Motivo_Finalizacion_Turno; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Asignacion_de_Turnos", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Asignacion_de_TurnosResources.Folio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromFolio, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.FromFolio)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToFolio, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToFolio", @data_min = "txtAdvanceFromFolio" })
                    @Html.ValidationMessageFor(m => m.ToFolio)
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Asignacion_de_TurnosResources.Fecha_de_Turno</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_Turno" name="FromFecha_de_Turno" type="text" value="@Model.FromFecha_de_Turno" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_Turno" name="ToFecha_de_Turno" type="text" value="@Model.ToFecha_de_Turno" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Asignacion_de_TurnosResources.Hora_de_Turno</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_Turno" name="FromHora_de_Turno" type="text" value="@Model.FromHora_de_Turno" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_Turno" name="ToHora_de_Turno" type="text" value="@Model.ToHora_de_Turno" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Numero_de_Turno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_TurnoFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_TurnoFilter" })
                    @Html.TextBoxFor(m => m.Numero_de_Turno, new { @class = "form-control", @type = "text", @id = "txtNumero_de_Turno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Unidad_de_Atencion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Unidad_de_AtencionFilter, filters, new { @class = "form-control", @id = "ddlUnidad_de_AtencionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceUnidad_de_Atencion, new { @class = "form-control", @type = "text", @id = "txtAdvanceUnidad_de_Atencion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varUnidad_Unidad_de_Atencion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceUnidad_de_AtencionMultiple, varUnidad_Unidad_de_Atencion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceUnidad_de_Atencion"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Recepcion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.RecepcionFilter, filters, new { @class = "form-control", @id = "ddlRecepcionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceRecepcion, new { @class = "form-control", @type = "text", @id = "txtAdvanceRecepcion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSpartan_User_Recepcion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceRecepcionMultiple, varSpartan_User_Recepcion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceRecepcion"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Nombres</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.NombresFilter, filters, new { @class = "form-control", @id = "ddlNombresFilter" })
                    @Html.TextBoxFor(m => m.Nombres, new { @class = "form-control", @type = "text", @id = "txtNombres" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Apellido_Paterno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_PaternoFilter, filters, new { @class = "form-control", @id = "ddlApellido_PaternoFilter" })
                    @Html.TextBoxFor(m => m.Apellido_Paterno, new { @class = "form-control", @type = "text", @id = "txtApellido_Paterno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Apellido_Materno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Apellido_MaternoFilter, filters, new { @class = "form-control", @id = "ddlApellido_MaternoFilter" })
                    @Html.TextBoxFor(m => m.Apellido_Materno, new { @class = "form-control", @type = "text", @id = "txtApellido_Materno" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Nombre_Completo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Nombre_CompletoFilter, filters, new { @class = "form-control", @id = "ddlNombre_CompletoFilter" })
                    @Html.TextBoxFor(m => m.Nombre_Completo, new { @class = "form-control", @type = "text", @id = "txtNombre_Completo" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Sexo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.SexoFilter, filters, new { @class = "form-control", @id = "ddlSexoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceSexo, new { @class = "form-control", @type = "text", @id = "txtAdvanceSexo" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varGenero_Sexo!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceSexoMultiple, varGenero_Sexo,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceSexo"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Asignacion_de_TurnosResources.Edad</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromEdad, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromEdad" })
                    @Html.ValidationMessageFor(m => m.FromEdad)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToEdad, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToEdad", @data_min = "txtAdvanceFromEdad" })
                    @Html.ValidationMessageFor(m => m.ToEdad)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Tipo_de_Atencion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Tipo_de_AtencionFilter, filters, new { @class = "form-control", @id = "ddlTipo_de_AtencionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceTipo_de_Atencion, new { @class = "form-control", @type = "text", @id = "txtAdvanceTipo_de_Atencion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Atencion_Tipo_de_Atencion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceTipo_de_AtencionMultiple, varTipo_de_Atencion_Tipo_de_Atencion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceTipo_de_Atencion"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Tipo_de_Identificacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Tipo_de_IdentificacionFilter, filters, new { @class = "form-control", @id = "ddlTipo_de_IdentificacionFilter" })
                    @Html.TextBoxFor(m => m.AdvanceTipo_de_Identificacion, new { @class = "form-control", @type = "text", @id = "txtAdvanceTipo_de_Identificacion" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Identificacion_Tipo_de_Identificacion!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceTipo_de_IdentificacionMultiple, varTipo_de_Identificacion_Tipo_de_Identificacion,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceTipo_de_Identificacion"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Otra_Identificacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Otra_IdentificacionFilter, filters, new { @class = "form-control", @id = "ddlOtra_IdentificacionFilter" })
                    @Html.TextBoxFor(m => m.Otra_Identificacion, new { @class = "form-control", @type = "text", @id = "txtOtra_Identificacion" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Numero_de_Identificacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_IdentificacionFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_IdentificacionFilter" })
                    @Html.TextBoxFor(m => m.Numero_de_Identificacion, new { @class = "form-control", @type = "text", @id = "txtNumero_de_Identificacion" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Tipo_de_Urgencia</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Tipo_de_UrgenciaFilter, filters, new { @class = "form-control", @id = "ddlTipo_de_UrgenciaFilter" })
                    @Html.TextBoxFor(m => m.AdvanceTipo_de_Urgencia, new { @class = "form-control", @type = "text", @id = "txtAdvanceTipo_de_Urgencia" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Urgencia_Tipo_de_Urgencia!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceTipo_de_UrgenciaMultiple, varTipo_de_Urgencia_Tipo_de_Urgencia,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceTipo_de_Urgencia"
                        });
                    }
                </div>
 List<SelectListItem> varSolicitud_de_Denuncia_Ciudadana_Denuncia_Ciudadana = null;
    if (ViewBag.Solicitud_de_Denuncia_Ciudadanas_Denuncia_Ciudadana != null)
    { varSolicitud_de_Denuncia_Ciudadana_Denuncia_Ciudadana = (List<SelectListItem>)ViewBag.Solicitud_de_Denuncia_Ciudadanas_Denuncia_Ciudadana; }
 List<SelectListItem> varAsignacion_de_Turnos_Previos_Turno_Previo = null;
    if (ViewBag.Asignacion_de_Turnos_Previoss_Turno_Previo != null)
    { varAsignacion_de_Turnos_Previos_Turno_Previo = (List<SelectListItem>)ViewBag.Asignacion_de_Turnos_Previoss_Turno_Previo; }
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Orientador</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.OrientadorFilter, filters, new { @class = "form-control", @id = "ddlOrientadorFilter" })
                    @Html.TextBoxFor(m => m.AdvanceOrientador, new { @class = "form-control", @type = "text", @id = "txtAdvanceOrientador" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varSpartan_User_Orientador!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceOrientadorMultiple, varSpartan_User_Orientador,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceOrientador"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Estatus_de_Turno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Estatus_de_TurnoFilter, filters, new { @class = "form-control", @id = "ddlEstatus_de_TurnoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceEstatus_de_Turno, new { @class = "form-control", @type = "text", @id = "txtAdvanceEstatus_de_Turno" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varEstatus_de_Turno_Estatus_de_Turno!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceEstatus_de_TurnoMultiple, varEstatus_de_Turno_Estatus_de_Turno,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceEstatus_de_Turno"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Modulo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ModuloFilter, filters, new { @class = "form-control", @id = "ddlModuloFilter" })
                    @Html.TextBoxFor(m => m.AdvanceModulo, new { @class = "form-control", @type = "text", @id = "txtAdvanceModulo" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varModulo_Modulo!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceModuloMultiple, varModulo_Modulo,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceModulo"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Motivo_Finalizacion_Turno</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Motivo_Finalizacion_TurnoFilter, filters, new { @class = "form-control", @id = "ddlMotivo_Finalizacion_TurnoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceMotivo_Finalizacion_Turno, new { @class = "form-control", @type = "text", @id = "txtAdvanceMotivo_Finalizacion_Turno" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varMotivo_Finalizacion_Turno_Motivo_Finalizacion_Turno!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceMotivo_Finalizacion_TurnoMultiple, varMotivo_Finalizacion_Turno_Motivo_Finalizacion_Turno,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceMotivo_Finalizacion_Turno"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Asignacion_de_TurnosResources.Observaciones</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.ObservacionesFilter, filters, new { @class = "form-control", @id = "ddlObservacionesFilter" })
                    @Html.TextBoxFor(m => m.Observaciones, new { @class = "form-control", @type = "text", @id = "txtObservaciones" })
                </div>
        <div class="MarginBottom ">
            <h3>@Resources.Asignacion_de_TurnosResources.Fecha_de_Asignacion</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_Asignacion" name="FromFecha_de_Asignacion" type="text" value="@Model.FromFecha_de_Asignacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_Asignacion" name="ToFecha_de_Asignacion" type="text" value="@Model.ToFecha_de_Asignacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Asignacion_de_TurnosResources.Hora_de_Asignacion</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_Asignacion" name="FromHora_de_Asignacion" type="text" value="@Model.FromHora_de_Asignacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_Asignacion" name="ToHora_de_Asignacion" type="text" value="@Model.ToHora_de_Asignacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Asignacion_de_TurnosResources.Fecha_de_Finalizacion</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_Finalizacion" name="FromFecha_de_Finalizacion" type="text" value="@Model.FromFecha_de_Finalizacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_Finalizacion" name="ToFecha_de_Finalizacion" type="text" value="@Model.ToFecha_de_Finalizacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Asignacion_de_TurnosResources.Hora_de_Finalizacion</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_Finalizacion" name="FromHora_de_Finalizacion" type="text" value="@Model.FromHora_de_Finalizacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_Finalizacion" name="ToHora_de_Finalizacion" type="text" value="@Model.ToHora_de_Finalizacion" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Asignacion_de_Turnos/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromFolio").val() != "" || $("#txtAdvanceToFolio").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosFolioFrom = $("#txtAdvanceFromFolio").val();
            advanceSearch.Asignacion_de_TurnosFolioTo = $("#txtAdvanceToFolio").val();
        }
        if ($("#txtAdvanceFromFecha_de_Turno").val() != "" || $("#txtAdvanceToFecha_de_Turno").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosFecha_de_TurnoFrom = $("#txtAdvanceFromFecha_de_Turno").val();
            advanceSearch.Asignacion_de_TurnosFecha_de_TurnoTo = $("#txtAdvanceToFecha_de_Turno").val();
        }
        if ($("#txtAdvanceHora_de_Turno").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosHora_de_Turno = $("#txtAdvanceHora_de_Turno").val();
            advanceSearch.Asignacion_de_TurnosHora_de_TurnoSearchType = $("#ddlAdvanceHora_de_TurnoFilter").val();
        }
        if ($("#txtAdvanceNumero_de_Turno").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosNumero_de_Turno = $("#txtAdvanceNumero_de_Turno").val();
            advanceSearch.Asignacion_de_TurnosNumero_de_TurnoSearchType = $("#ddlAdvanceNumero_de_TurnoFilter").val();
        }
        advanceSearch.Unidad_de_AtencionSearchType = 0;
        if ($('#ddlAdvanceUnidad_de_Atencion').val().length > 0 || $("#txtAdvanceUnidad_de_Atencion").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Unidad_de_AtencionName = $("#txtAdvanceUnidad_de_Atencion").val();
                advanceSearch.Unidad_de_AtencionNameSearchType = $("#ddlAdvanceUnidad_de_Atencion").val();
                advanceSearch.Unidad_de_AtencionSearchType = 1;
            }
            else {

                advanceSearch.Unidad_de_AtencionToSearch = $("#ddlAdvanceUnidad_de_Atencion").val();
                advanceSearch.Unidad_de_AtencionSearchType = 2;
            }
        }
        advanceSearch.RecepcionSearchType = 0;
        if ($('#ddlAdvanceRecepcion').val().length > 0 || $("#txtAdvanceRecepcion").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.RecepcionName = $("#txtAdvanceRecepcion").val();
                advanceSearch.RecepcionNameSearchType = $("#ddlAdvanceRecepcion").val();
                advanceSearch.RecepcionSearchType = 1;
            }
            else {

                advanceSearch.RecepcionToSearch = $("#ddlAdvanceRecepcion").val();
                advanceSearch.RecepcionSearchType = 2;
            }
        }
        if ($("#txtAdvanceNombres").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosNombres = $("#txtAdvanceNombres").val();
            advanceSearch.Asignacion_de_TurnosNombresSearchType = $("#ddlAdvanceNombresFilter").val();
        }
        if ($("#txtAdvanceApellido_Paterno").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosApellido_Paterno = $("#txtAdvanceApellido_Paterno").val();
            advanceSearch.Asignacion_de_TurnosApellido_PaternoSearchType = $("#ddlAdvanceApellido_PaternoFilter").val();
        }
        if ($("#txtAdvanceApellido_Materno").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosApellido_Materno = $("#txtAdvanceApellido_Materno").val();
            advanceSearch.Asignacion_de_TurnosApellido_MaternoSearchType = $("#ddlAdvanceApellido_MaternoFilter").val();
        }
        if ($("#txtAdvanceNombre_Completo").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosNombre_Completo = $("#txtAdvanceNombre_Completo").val();
            advanceSearch.Asignacion_de_TurnosNombre_CompletoSearchType = $("#ddlAdvanceNombre_CompletoFilter").val();
        }
        advanceSearch.SexoSearchType = 0;
        if ($('#ddlAdvanceSexo').val().length > 0 || $("#txtAdvanceSexo").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.SexoName = $("#txtAdvanceSexo").val();
                advanceSearch.SexoNameSearchType = $("#ddlAdvanceSexo").val();
                advanceSearch.SexoSearchType = 1;
            }
            else {

                advanceSearch.SexoToSearch = $("#ddlAdvanceSexo").val();
                advanceSearch.SexoSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromEdad").val() != "" || $("#txtAdvanceToEdad").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosEdadFrom = $("#txtAdvanceFromEdad").val();
            advanceSearch.Asignacion_de_TurnosEdadTo = $("#txtAdvanceToEdad").val();
        }
        advanceSearch.Tipo_de_AtencionSearchType = 0;
        if ($('#ddlAdvanceTipo_de_Atencion').val().length > 0 || $("#txtAdvanceTipo_de_Atencion").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Tipo_de_AtencionName = $("#txtAdvanceTipo_de_Atencion").val();
                advanceSearch.Tipo_de_AtencionNameSearchType = $("#ddlAdvanceTipo_de_Atencion").val();
                advanceSearch.Tipo_de_AtencionSearchType = 1;
            }
            else {

                advanceSearch.Tipo_de_AtencionToSearch = $("#ddlAdvanceTipo_de_Atencion").val();
                advanceSearch.Tipo_de_AtencionSearchType = 2;
            }
        }
        advanceSearch.Tipo_de_IdentificacionSearchType = 0;
        if ($('#ddlAdvanceTipo_de_Identificacion').val().length > 0 || $("#txtAdvanceTipo_de_Identificacion").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Tipo_de_IdentificacionName = $("#txtAdvanceTipo_de_Identificacion").val();
                advanceSearch.Tipo_de_IdentificacionNameSearchType = $("#ddlAdvanceTipo_de_Identificacion").val();
                advanceSearch.Tipo_de_IdentificacionSearchType = 1;
            }
            else {

                advanceSearch.Tipo_de_IdentificacionToSearch = $("#ddlAdvanceTipo_de_Identificacion").val();
                advanceSearch.Tipo_de_IdentificacionSearchType = 2;
            }
        }
        if ($("#txtAdvanceOtra_Identificacion").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosOtra_Identificacion = $("#txtAdvanceOtra_Identificacion").val();
            advanceSearch.Asignacion_de_TurnosOtra_IdentificacionSearchType = $("#ddlAdvanceOtra_IdentificacionFilter").val();
        }
        if ($("#txtAdvanceNumero_de_Identificacion").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosNumero_de_Identificacion = $("#txtAdvanceNumero_de_Identificacion").val();
            advanceSearch.Asignacion_de_TurnosNumero_de_IdentificacionSearchType = $("#ddlAdvanceNumero_de_IdentificacionFilter").val();
        }
        if ($("#ddlAdvanceUrgencia").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosUrgencia = $("#ddlAdvanceUrgencia").val();
        }
        advanceSearch.Tipo_de_UrgenciaSearchType = 0;
        if ($('#ddlAdvanceTipo_de_Urgencia').val().length > 0 || $("#txtAdvanceTipo_de_Urgencia").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Tipo_de_UrgenciaName = $("#txtAdvanceTipo_de_Urgencia").val();
                advanceSearch.Tipo_de_UrgenciaNameSearchType = $("#ddlAdvanceTipo_de_Urgencia").val();
                advanceSearch.Tipo_de_UrgenciaSearchType = 1;
            }
            else {

                advanceSearch.Tipo_de_UrgenciaToSearch = $("#ddlAdvanceTipo_de_Urgencia").val();
                advanceSearch.Tipo_de_UrgenciaSearchType = 2;
            }
        }
        advanceSearch.Denuncia_CiudadanaSearchType = 0;
        if ($('#ddlAdvanceDenuncia_Ciudadana').val().length > 0 || $("#txtAdvanceDenuncia_Ciudadana").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Denuncia_CiudadanaName = $("#txtAdvanceDenuncia_Ciudadana").val();
                advanceSearch.Denuncia_CiudadanaNameSearchType = $("#ddlAdvanceDenuncia_Ciudadana").val();
                advanceSearch.Denuncia_CiudadanaSearchType = 1;
            }
            else {

                advanceSearch.Denuncia_CiudadanaToSearch = $("#ddlAdvanceDenuncia_Ciudadana").val();
                advanceSearch.Denuncia_CiudadanaSearchType = 2;
            }
        }
        advanceSearch.Turno_PrevioSearchType = 0;
        if ($('#ddlAdvanceTurno_Previo').val().length > 0 || $("#txtAdvanceTurno_Previo").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Turno_PrevioName = $("#txtAdvanceTurno_Previo").val();
                advanceSearch.Turno_PrevioNameSearchType = $("#ddlAdvanceTurno_Previo").val();
                advanceSearch.Turno_PrevioSearchType = 1;
            }
            else {

                advanceSearch.Turno_PrevioToSearch = $("#ddlAdvanceTurno_Previo").val();
                advanceSearch.Turno_PrevioSearchType = 2;
            }
        }
        advanceSearch.OrientadorSearchType = 0;
        if ($('#ddlAdvanceOrientador').val().length > 0 || $("#txtAdvanceOrientador").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.OrientadorName = $("#txtAdvanceOrientador").val();
                advanceSearch.OrientadorNameSearchType = $("#ddlAdvanceOrientador").val();
                advanceSearch.OrientadorSearchType = 1;
            }
            else {

                advanceSearch.OrientadorToSearch = $("#ddlAdvanceOrientador").val();
                advanceSearch.OrientadorSearchType = 2;
            }
        }
        advanceSearch.Estatus_de_TurnoSearchType = 0;
        if ($('#ddlAdvanceEstatus_de_Turno').val().length > 0 || $("#txtAdvanceEstatus_de_Turno").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Estatus_de_TurnoName = $("#txtAdvanceEstatus_de_Turno").val();
                advanceSearch.Estatus_de_TurnoNameSearchType = $("#ddlAdvanceEstatus_de_Turno").val();
                advanceSearch.Estatus_de_TurnoSearchType = 1;
            }
            else {

                advanceSearch.Estatus_de_TurnoToSearch = $("#ddlAdvanceEstatus_de_Turno").val();
                advanceSearch.Estatus_de_TurnoSearchType = 2;
            }
        }
        advanceSearch.ModuloSearchType = 0;
        if ($('#ddlAdvanceModulo').val().length > 0 || $("#txtAdvanceModulo").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.ModuloName = $("#txtAdvanceModulo").val();
                advanceSearch.ModuloNameSearchType = $("#ddlAdvanceModulo").val();
                advanceSearch.ModuloSearchType = 1;
            }
            else {

                advanceSearch.ModuloToSearch = $("#ddlAdvanceModulo").val();
                advanceSearch.ModuloSearchType = 2;
            }
        }
        advanceSearch.Motivo_Finalizacion_TurnoSearchType = 0;
        if ($('#ddlAdvanceMotivo_Finalizacion_Turno').val().length > 0 || $("#txtAdvanceMotivo_Finalizacion_Turno").val() == "") {


            if (isAsignacion_de_TurnosTextSearch) {
                advanceSearch.Motivo_Finalizacion_TurnoName = $("#txtAdvanceMotivo_Finalizacion_Turno").val();
                advanceSearch.Motivo_Finalizacion_TurnoNameSearchType = $("#ddlAdvanceMotivo_Finalizacion_Turno").val();
                advanceSearch.Motivo_Finalizacion_TurnoSearchType = 1;
            }
            else {

                advanceSearch.Motivo_Finalizacion_TurnoToSearch = $("#ddlAdvanceMotivo_Finalizacion_Turno").val();
                advanceSearch.Motivo_Finalizacion_TurnoSearchType = 2;
            }
        }
        if ($("#txtAdvanceObservaciones").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosObservaciones = $("#txtAdvanceObservaciones").val();
            advanceSearch.Asignacion_de_TurnosObservacionesSearchType = $("#ddlAdvanceObservacionesFilter").val();
        }
        if ($("#txtAdvanceFromFecha_de_Asignacion").val() != "" || $("#txtAdvanceToFecha_de_Asignacion").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosFecha_de_AsignacionFrom = $("#txtAdvanceFromFecha_de_Asignacion").val();
            advanceSearch.Asignacion_de_TurnosFecha_de_AsignacionTo = $("#txtAdvanceToFecha_de_Asignacion").val();
        }
        if ($("#txtAdvanceHora_de_Asignacion").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosHora_de_Asignacion = $("#txtAdvanceHora_de_Asignacion").val();
            advanceSearch.Asignacion_de_TurnosHora_de_AsignacionSearchType = $("#ddlAdvanceHora_de_AsignacionFilter").val();
        }
        if ($("#txtAdvanceFromFecha_de_Finalizacion").val() != "" || $("#txtAdvanceToFecha_de_Finalizacion").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosFecha_de_FinalizacionFrom = $("#txtAdvanceFromFecha_de_Finalizacion").val();
            advanceSearch.Asignacion_de_TurnosFecha_de_FinalizacionTo = $("#txtAdvanceToFecha_de_Finalizacion").val();
        }
        if ($("#txtAdvanceHora_de_Finalizacion").val() != "") {
            hasParameter = true;
            advanceSearch.Asignacion_de_TurnosHora_de_Finalizacion = $("#txtAdvanceHora_de_Finalizacion").val();
            advanceSearch.Asignacion_de_TurnosHora_de_FinalizacionSearchType = $("#ddlAdvanceHora_de_FinalizacionFilter").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblAsignacion_de_Turnos').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isAsignacion_de_TurnosTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceUnidad_de_Atencion").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceUnidad_de_Atencion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceUnidad_de_Atencion").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceUnidad_de_Atencion").val('');
        });
        $("#txtAdvanceRecepcion").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceRecepcion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceRecepcion").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceRecepcion").val('');
        });
        $("#txtAdvanceSexo").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceSexo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceSexo").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceSexo").val('');
        });
        $("#txtAdvanceTipo_de_Atencion").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceTipo_de_Atencion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceTipo_de_Atencion").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceTipo_de_Atencion").val('');
        });
        $("#txtAdvanceTipo_de_Identificacion").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceTipo_de_Identificacion").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceTipo_de_Identificacion").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceTipo_de_Identificacion").val('');
        });
        $("#txtAdvanceTipo_de_Urgencia").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceTipo_de_Urgencia").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceTipo_de_Urgencia").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceTipo_de_Urgencia").val('');
        });
        $("#txtAdvanceDenuncia_Ciudadana").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceDenuncia_Ciudadana").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceDenuncia_Ciudadana").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceDenuncia_Ciudadana").val('');
        });
        $("#txtAdvanceTurno_Previo").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceTurno_Previo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceTurno_Previo").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceTurno_Previo").val('');
        });
        $("#txtAdvanceOrientador").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceOrientador").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceOrientador").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceOrientador").val('');
        });
        $("#txtAdvanceEstatus_de_Turno").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceEstatus_de_Turno").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceEstatus_de_Turno").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceEstatus_de_Turno").val('');
        });
        $("#txtAdvanceModulo").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceModulo").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceModulo").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceModulo").val('');
        });
        $("#txtAdvanceMotivo_Finalizacion_Turno").keypress(function () {
            isAsignacion_de_TurnosTextSearch = true;
            $("#ddlAdvanceMotivo_Finalizacion_Turno").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceMotivo_Finalizacion_Turno").change(function () {
            isAsignacion_de_TurnosTextSearch = false;
            $("#txtAdvanceMotivo_Finalizacion_Turno").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

