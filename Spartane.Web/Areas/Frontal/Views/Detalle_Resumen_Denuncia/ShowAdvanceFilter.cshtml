@using System.Collections.Generic
@using Spartane.Web.Areas.Frontal.Models
@using Spartane.Web.Helpers
@model Spartane.Web.Areas.Frontal.Models.Detalle_Resumen_DenunciaAdvanceSearchModel
@{
    List<SelectListItem> varModulo_Atencion_Inicial_Modulo_Atencion_Inicial = null;
    if (ViewBag.Modulo_Atencion_Inicials_Modulo_Atencion_Inicial != null)
    { varModulo_Atencion_Inicial_Modulo_Atencion_Inicial = (List<SelectListItem>)ViewBag.Modulo_Atencion_Inicials_Modulo_Atencion_Inicial; }
 List<SelectListItem> varexpediente_ministerio_publico_Expediente_MP = null;
    if (ViewBag.expediente_ministerio_publicos_Expediente_MP != null)
    { varexpediente_ministerio_publico_Expediente_MP = (List<SelectListItem>)ViewBag.expediente_ministerio_publicos_Expediente_MP; }
 List<SelectListItem> varSpartan_User_Usuario_que_registra = null;
    if (ViewBag.Spartan_Users_Usuario_que_registra != null)
    { varSpartan_User_Usuario_que_registra = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_que_registra; }
    List<SelectListItem> varTipo_de_Expediente_Generado_Generar = null;
    if (ViewBag.Tipo_de_Expediente_Generados_Generar != null)
    { varTipo_de_Expediente_Generado_Generar = (List<SelectListItem>)ViewBag.Tipo_de_Expediente_Generados_Generar; }
    List<SelectListItem> varDocumento_Documento = null;
    if (ViewBag.Documentos_Documento != null)
    { varDocumento_Documento = (List<SelectListItem>)ViewBag.Documentos_Documento; }

    var filters = (List<SelectListItem>)ViewBag.Filter;
}
<style>
    .input-validation-error {
        background: rgb(251, 227, 228);
        border: 1px solid #fbc2c4;
        color: #8a1f11;
    }

    .MarginBottom {
        margin-bottom: 1%;
    }

    #divAdvanceSearch input {
        margin-right: 2%;
    }

    #divAdvanceSearch button {
        margin-right: 2%;
    }

    #divAdvanceSearch select {
        margin-right: 2%;
    }

    #divAdvanceSearch h3 {
        margin-top: 2%;
    }

</style>
<div class="wrapper wrapper-content animated fadeInRight">
    <div class="ibox float-e-margins" id="divAdvanceSearch">
        <div class="ibox-content">
            @using (Html.BeginForm("ShowAdvanceFilter", "Detalle_Resumen_Denuncia", FormMethod.Post, new { @id = "frmAdvanceSearch", @role = "form" }))
            {
				<input type="hidden" value="-1" name="idFilter" id="idFilter" />
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Clave</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromClave, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.FromClave)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToClave, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToClave", @data_min = "txtAdvanceFromClave" })
                    @Html.ValidationMessageFor(m => m.ToClave)
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Modulo_Atencion_Inicial</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Modulo_Atencion_InicialFilter, filters, new { @class = "form-control", @id = "ddlModulo_Atencion_InicialFilter" })
                    @Html.TextBoxFor(m => m.AdvanceModulo_Atencion_Inicial, new { @class = "form-control", @type = "text", @id = "txtAdvanceModulo_Atencion_Inicial" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varModulo_Atencion_Inicial_Modulo_Atencion_Inicial!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceModulo_Atencion_InicialMultiple, varModulo_Atencion_Inicial_Modulo_Atencion_Inicial,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceModulo_Atencion_Inicial"
                        });
                    }
                </div>
 List<SelectListItem> varexpediente_ministerio_publico_Expediente_MP = null;
    if (ViewBag.expediente_ministerio_publicos_Expediente_MP != null)
    { varexpediente_ministerio_publico_Expediente_MP = (List<SelectListItem>)ViewBag.expediente_ministerio_publicos_Expediente_MP; }
        <div class="MarginBottom ">
            <h3>@Resources.Detalle_Resumen_DenunciaResources.Fecha_de_registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceFromFecha_de_registro" name="FromFecha_de_registro" type="text" value="@Model.FromFecha_de_registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group date">
                <input class="form-control" id="txtAdvanceToFecha_de_registro" name="ToFecha_de_registro" type="text" value="@Model.ToFecha_de_registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-calendar"></span>
                </span>
            </div>
        </div>
        <div class="MarginBottom ">
            <h3>@Resources.Detalle_Resumen_DenunciaResources.Hora_de_registro</h3>
        </div>
        <div class="MarginBottom form-inline">
            <label class="">@Resources.Resources.From:</label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceFromHora_de_registro" name="FromHora_de_registro" type="text" value="@Model.FromHora_de_registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
            <label class="">@Resources.Resources.To: </label>
            <div class="input-group clock" data-autoclose="true">
                <input class="form-control" id="txtAdvanceToHora_de_registro" name="ToHora_de_registro" type="text" value="@Model.ToHora_de_registro" />
                <span class="form-inline input-group-addon">
                    <span class="glyphicon glyphicon-time"></span>
                </span>
            </div>
        </div>
 List<SelectListItem> varSpartan_User_Usuario_que_registra = null;
    if (ViewBag.Spartan_Users_Usuario_que_registra != null)
    { varSpartan_User_Usuario_que_registra = (List<SelectListItem>)ViewBag.Spartan_Users_Usuario_que_registra; }
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Generar</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.GenerarFilter, filters, new { @class = "form-control", @id = "ddlGenerarFilter" })
                    @Html.TextBoxFor(m => m.AdvanceGenerar, new { @class = "form-control", @type = "text", @id = "txtAdvanceGenerar" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varTipo_de_Expediente_Generado_Generar!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceGenerarMultiple, varTipo_de_Expediente_Generado_Generar,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceGenerar"
                        });
                    }
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Numero_Generado</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_GeneradoFilter, filters, new { @class = "form-control", @id = "ddlNumero_GeneradoFilter" })
                    @Html.TextBoxFor(m => m.Numero_Generado, new { @class = "form-control", @type = "text", @id = "txtNumero_Generado" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Numero_de_Oficio</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Numero_de_OficioFilter, filters, new { @class = "form-control", @id = "ddlNumero_de_OficioFilter" })
                    @Html.TextBoxFor(m => m.Numero_de_Oficio, new { @class = "form-control", @type = "text", @id = "txtNumero_de_Oficio" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Probable_Responsable</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.Probable_ResponsableFilter, filters, new { @class = "form-control", @id = "ddlProbable_ResponsableFilter" })
                    @Html.TextBoxFor(m => m.Probable_Responsable, new { @class = "form-control", @type = "text", @id = "txtProbable_Responsable" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Delito</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DelitoFilter, filters, new { @class = "form-control", @id = "ddlDelitoFilter" })
                    @Html.TextBoxFor(m => m.Delito, new { @class = "form-control", @type = "text", @id = "txtDelito" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Victima</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.VictimaFilter, filters, new { @class = "form-control", @id = "ddlVictimaFilter" })
                    @Html.TextBoxFor(m => m.Victima, new { @class = "form-control", @type = "text", @id = "txtVictima" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Relacion</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.RelacionFilter, filters, new { @class = "form-control", @id = "ddlRelacionFilter" })
                    @Html.TextBoxFor(m => m.Relacion, new { @class = "form-control", @type = "text", @id = "txtRelacion" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Hechos</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.HechosFilter, filters, new { @class = "form-control", @id = "ddlHechosFilter" })
                    @Html.TextBoxFor(m => m.Hechos, new { @class = "form-control", @type = "text", @id = "txtHechos" })
                </div>
                <div class="MarginBottom">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Documento</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.Filter:</label>
                    @Html.DropDownListFor(m => m.DocumentoFilter, filters, new { @class = "form-control", @id = "ddlDocumentoFilter" })
                    @Html.TextBoxFor(m => m.AdvanceDocumento, new { @class = "form-control", @type = "text", @id = "txtAdvanceDocumento" })
                    <label class="">@Resources.Resources.OrSelect </label>
                    @if (varDocumento_Documento!=null)
                    {
                        @Html.ListBoxFor(m => m.AdvanceDocumentoMultiple, varDocumento_Documento,
                        new
                        {
                            @class = "form-control chosen-select",
                            @multiple = "multiple",
                            @data_placeholder = "",
                            @style = "width: 350px;",
                            @id = "ddlAdvanceDocumento"
                        });
                    }
                </div>
                <div class="MarginBottom ">
                    <h3>@Resources.Detalle_Resumen_DenunciaResources.Archivo</h3>
                </div>
                <div class="MarginBottom form-inline">
                    <label class="">@Resources.Resources.From:</label>
                    @Html.TextBoxFor(m => m.FromArchivo, new { @class = "form-control greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceFromArchivo" })
                    @Html.ValidationMessageFor(m => m.FromArchivo)
                    <label class="">@Resources.Resources.To: </label>
                    @Html.TextBoxFor(m => m.ToArchivo, new { @class = "form-control greaterThan greaterThanZero", @type = "text", @onkeypress = "return isNumberKey(this, event);", @id = "txtAdvanceToArchivo", @data_min = "txtAdvanceFromArchivo" })
                    @Html.ValidationMessageFor(m => m.ToArchivo)
                </div>

                <div class="MarginBottom form-inline">
                    <input type="submit" class="btn btn-primary" value="@Resources.Resources.Search"><a class="btn btn-primary" href="@Url.Content("~/Frontal/Detalle_Resumen_Denuncia/")" value=" ">@Resources.Resources.Cancelar</a>
                </div>
            }
        </div>
    </div>
</div>

<script>
    function InitiateAdvanceSearch() {
        var advanceSearch = {}, hasParameter = false;
        if ($("#txtAdvanceFromClave").val() != "" || $("#txtAdvanceToClave").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaClaveFrom = $("#txtAdvanceFromClave").val();
            advanceSearch.Detalle_Resumen_DenunciaClaveTo = $("#txtAdvanceToClave").val();
        }
        advanceSearch.Modulo_Atencion_InicialSearchType = 0;
        if ($('#ddlAdvanceModulo_Atencion_Inicial').val().length > 0 || $("#txtAdvanceModulo_Atencion_Inicial").val() == "") {


            if (isDetalle_Resumen_DenunciaTextSearch) {
                advanceSearch.Modulo_Atencion_InicialName = $("#txtAdvanceModulo_Atencion_Inicial").val();
                advanceSearch.Modulo_Atencion_InicialNameSearchType = $("#ddlAdvanceModulo_Atencion_Inicial").val();
                advanceSearch.Modulo_Atencion_InicialSearchType = 1;
            }
            else {

                advanceSearch.Modulo_Atencion_InicialToSearch = $("#ddlAdvanceModulo_Atencion_Inicial").val();
                advanceSearch.Modulo_Atencion_InicialSearchType = 2;
            }
        }
        advanceSearch.Expediente_MPSearchType = 0;
        if ($('#ddlAdvanceExpediente_MP').val().length > 0 || $("#txtAdvanceExpediente_MP").val() == "") {


            if (isDetalle_Resumen_DenunciaTextSearch) {
                advanceSearch.Expediente_MPName = $("#txtAdvanceExpediente_MP").val();
                advanceSearch.Expediente_MPNameSearchType = $("#ddlAdvanceExpediente_MP").val();
                advanceSearch.Expediente_MPSearchType = 1;
            }
            else {

                advanceSearch.Expediente_MPToSearch = $("#ddlAdvanceExpediente_MP").val();
                advanceSearch.Expediente_MPSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromFecha_de_registro").val() != "" || $("#txtAdvanceToFecha_de_registro").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaFecha_de_registroFrom = $("#txtAdvanceFromFecha_de_registro").val();
            advanceSearch.Detalle_Resumen_DenunciaFecha_de_registroTo = $("#txtAdvanceToFecha_de_registro").val();
        }
        if ($("#txtAdvanceHora_de_registro").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaHora_de_registro = $("#txtAdvanceHora_de_registro").val();
            advanceSearch.Detalle_Resumen_DenunciaHora_de_registroSearchType = $("#ddlAdvanceHora_de_registroFilter").val();
        }
        advanceSearch.Usuario_que_registraSearchType = 0;
        if ($('#ddlAdvanceUsuario_que_registra').val().length > 0 || $("#txtAdvanceUsuario_que_registra").val() == "") {


            if (isDetalle_Resumen_DenunciaTextSearch) {
                advanceSearch.Usuario_que_registraName = $("#txtAdvanceUsuario_que_registra").val();
                advanceSearch.Usuario_que_registraNameSearchType = $("#ddlAdvanceUsuario_que_registra").val();
                advanceSearch.Usuario_que_registraSearchType = 1;
            }
            else {

                advanceSearch.Usuario_que_registraToSearch = $("#ddlAdvanceUsuario_que_registra").val();
                advanceSearch.Usuario_que_registraSearchType = 2;
            }
        }
        advanceSearch.GenerarSearchType = 0;
        if ($('#ddlAdvanceGenerar').val().length > 0 || $("#txtAdvanceGenerar").val() == "") {


            if (isDetalle_Resumen_DenunciaTextSearch) {
                advanceSearch.GenerarName = $("#txtAdvanceGenerar").val();
                advanceSearch.GenerarNameSearchType = $("#ddlAdvanceGenerar").val();
                advanceSearch.GenerarSearchType = 1;
            }
            else {

                advanceSearch.GenerarToSearch = $("#ddlAdvanceGenerar").val();
                advanceSearch.GenerarSearchType = 2;
            }
        }
        if ($("#txtAdvanceNumero_Generado").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaNumero_Generado = $("#txtAdvanceNumero_Generado").val();
            advanceSearch.Detalle_Resumen_DenunciaNumero_GeneradoSearchType = $("#ddlAdvanceNumero_GeneradoFilter").val();
        }
        if ($("#txtAdvanceNumero_de_Oficio").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaNumero_de_Oficio = $("#txtAdvanceNumero_de_Oficio").val();
            advanceSearch.Detalle_Resumen_DenunciaNumero_de_OficioSearchType = $("#ddlAdvanceNumero_de_OficioFilter").val();
        }
        if ($("#txtAdvanceProbable_Responsable").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaProbable_Responsable = $("#txtAdvanceProbable_Responsable").val();
            advanceSearch.Detalle_Resumen_DenunciaProbable_ResponsableSearchType = $("#ddlAdvanceProbable_ResponsableFilter").val();
        }
        if ($("#txtAdvanceDelito").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaDelito = $("#txtAdvanceDelito").val();
            advanceSearch.Detalle_Resumen_DenunciaDelitoSearchType = $("#ddlAdvanceDelitoFilter").val();
        }
        if ($("#txtAdvanceVictima").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaVictima = $("#txtAdvanceVictima").val();
            advanceSearch.Detalle_Resumen_DenunciaVictimaSearchType = $("#ddlAdvanceVictimaFilter").val();
        }
        if ($("#txtAdvanceRelacion").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaRelacion = $("#txtAdvanceRelacion").val();
            advanceSearch.Detalle_Resumen_DenunciaRelacionSearchType = $("#ddlAdvanceRelacionFilter").val();
        }
        if ($("#txtAdvanceHechos").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaHechos = $("#txtAdvanceHechos").val();
            advanceSearch.Detalle_Resumen_DenunciaHechosSearchType = $("#ddlAdvanceHechosFilter").val();
        }
        if ($("#ddlAdvanceGenerado").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaGenerado = $("#ddlAdvanceGenerado").val();
        }
        if ($("#ddlAdvanceArchivo_Descargado").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaArchivo_Descargado = $("#ddlAdvanceArchivo_Descargado").val();
        }
        advanceSearch.DocumentoSearchType = 0;
        if ($('#ddlAdvanceDocumento').val().length > 0 || $("#txtAdvanceDocumento").val() == "") {


            if (isDetalle_Resumen_DenunciaTextSearch) {
                advanceSearch.DocumentoName = $("#txtAdvanceDocumento").val();
                advanceSearch.DocumentoNameSearchType = $("#ddlAdvanceDocumento").val();
                advanceSearch.DocumentoSearchType = 1;
            }
            else {

                advanceSearch.DocumentoToSearch = $("#ddlAdvanceDocumento").val();
                advanceSearch.DocumentoSearchType = 2;
            }
        }
        if ($("#txtAdvanceFromArchivo").val() != "" || $("#txtAdvanceToArchivo").val() != "") {
            hasParameter = true;
            advanceSearch.Detalle_Resumen_DenunciaArchivoFrom = $("#txtAdvanceFromArchivo").val();
            advanceSearch.Detalle_Resumen_DenunciaArchivoTo = $("#txtAdvanceToArchivo").val();
        }

        advanceSearchQuery = hasParameter ? JSON.stringify(advanceSearch) : "";
        $('#tblDetalle_Resumen_Denuncia').DataTable().draw();
        return false;
    }

    var advanceSearchQuery = "", isDetalle_Resumen_DenunciaTextSearch = true;

    $(document).ready(function () {
        $('.clock').clockpicker();
		$('.date').datepicker({
			todayBtn: "linked",
			keyboardNavigation: false,
			forceParse: false,
			calendarWeeks: true,
			autoclose: true,
			format: "@ConfigurationProperty.DateFormatDatePicker"
		});
        $("#txtAdvanceModulo_Atencion_Inicial").keypress(function () {
            isDetalle_Resumen_DenunciaTextSearch = true;
            $("#ddlAdvanceModulo_Atencion_Inicial").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceModulo_Atencion_Inicial").change(function () {
            isDetalle_Resumen_DenunciaTextSearch = false;
            $("#txtAdvanceModulo_Atencion_Inicial").val('');
        });
        $("#txtAdvanceExpediente_MP").keypress(function () {
            isDetalle_Resumen_DenunciaTextSearch = true;
            $("#ddlAdvanceExpediente_MP").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceExpediente_MP").change(function () {
            isDetalle_Resumen_DenunciaTextSearch = false;
            $("#txtAdvanceExpediente_MP").val('');
        });
        $("#txtAdvanceUsuario_que_registra").keypress(function () {
            isDetalle_Resumen_DenunciaTextSearch = true;
            $("#ddlAdvanceUsuario_que_registra").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceUsuario_que_registra").change(function () {
            isDetalle_Resumen_DenunciaTextSearch = false;
            $("#txtAdvanceUsuario_que_registra").val('');
        });
        $("#txtAdvanceGenerar").keypress(function () {
            isDetalle_Resumen_DenunciaTextSearch = true;
            $("#ddlAdvanceGenerar").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceGenerar").change(function () {
            isDetalle_Resumen_DenunciaTextSearch = false;
            $("#txtAdvanceGenerar").val('');
        });
        $("#txtAdvanceDocumento").keypress(function () {
            isDetalle_Resumen_DenunciaTextSearch = true;
            $("#ddlAdvanceDocumento").val('').trigger("chosen:updated");
        });

        $("#ddlAdvanceDocumento").change(function () {
            isDetalle_Resumen_DenunciaTextSearch = false;
            $("#txtAdvanceDocumento").val('');
        });

    });
</script>


@section Styles {
    @Styles.Render("~/Content/plugins/chosen/chosenStyles")
    @Styles.Render("~/plugins/dateRangeStyles")
    @Styles.Render("~/plugins/dataPickerStyles")
    @Styles.Render("~/plugins/clockpickerStyles")

}

@section Scripts {
    @Scripts.Render("~/plugins/chosen")
    @Scripts.Render("~/plugins/dataPicker")
    @Scripts.Render("~/plugins/clockpicker")


    <script>
        //Adding Rules
        jQuery.validator.unobtrusive
      .adapters.addSingleVal("isnumberafter", "propertyname");
        jQuery.validator.unobtrusive
    .adapters.addSingleVal("isdateafter", "propertyname");

        //Number after method
        jQuery.validator.addMethod("isnumberafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {
                //if (Date.parse(val) <= Date.parse(otherVal)) {
                if (Number(val) < Number(otherVal)) {
                    return false;
                }
                        }
            return true;
        });

        //Date after after method
        jQuery.validator.addMethod("isdateafter", function (val, element, other) {
            var modelPrefix = element.name.substr(
                0, element.name.lastIndexOf(".") + 1);
            var otherVal = $("[name=" + modelPrefix + other + "]").val();
            if (val && otherVal) {

                if (GetDateObject(val) < GetDateObject(otherVal)) {

                    return false;
                    }
                }
            return true;
            });


        function GetDateObject(value) {
            var delimiter = GetDelimiter(dateFormat);
            var dateCollection = value.split(delimiter);
            var formatCollection = dateFormat.split(delimiter);
            var dateModel = GetDateModel(dateCollection, formatCollection);
            return new Date(dateModel.Year, dateModel.Month - 1, dateModel.Day);
        }
        //Used to get the date model by parsing the date and the format
        function GetDateModel(dateCollection,formatCollection) {
            var day, month, year;
            for (var i = 0; i < formatCollection.length; i++) {
                switch (formatCollection[i][0].toUpperCase()) {
                
                    case "D":
                        day = dateCollection[i];
                        break;

                    case "Y":
                        year = dateCollection[i];
                        break;

                    case "M":
                        month = dateCollection[i];
                        break;
                }
            }

            return {
                Day:day,
                Month:month,
                Year:year
            };
        }

        function GetDelimiter(format) {

            for (var i = 0; i < format.length; i++) {
                if (/[~`!#$%\^&*+=\-\[\]\\';,/{}|\\":<>\?]/g.test(format[i])) {
                    return format[i];
                }
            }
            return null;
        }

        var dateFormat = "@ConfigurationProperty.DateFormatDatePicker";

        $(document).ready(function () {
            $('.input-daterange').datepicker({
                keyboardNavigation: false,
                forceParse: false,
                autoclose: true,
                format: dateFormat,
                message: 'The date is not a valid'
            });

            $(".chosen-select").chosen({ width: "22%", no_results_text: "Oops, nothing found!" });
			if ($('#IsFilterModal').val() == 'true') {
                $('.ShowAdvanceFilter #right-sidebar').css('display', 'none');
                $('.ShowAdvanceFilter .navbar-default').css('display', 'none');
                $('.ShowAdvanceFilter .border-bottom').css('display', 'none');
                $('.ShowAdvanceFilter #page-wrapper').css('margin', '0 auto');
                $('.ShowAdvanceFilter .btn-save').val('@Resources.Resources.Filter');
                $('.ShowAdvanceFilter .btn-cancelar').attr('data-dismiss', 'modal');
                $('.ShowAdvanceFilter .btn-cancelar').removeAttr('href');
                $('#idFilter').val($('#IdReport').val());
            }
        });

    </script>
}

