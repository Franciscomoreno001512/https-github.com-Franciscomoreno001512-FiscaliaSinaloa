@model Spartane.Web.Models.ChangePasswordViewModel
@{
    Layout = null;
}

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-body">
            @using (Html.BeginForm("ChangePassword", "Accounts", FormMethod.Post, new { id = "formPass", role = "form", data_toggle = "validator", @readonly = "true", @class = "form-horizontal", enctype = "multipart/form-data" }))
            {
                <div class="row">
                    <div class="col-4 b-r">
                        <img class="logo-fiscalia"  src="~/Images/logotipos/fiscalia200px.png" alt="Logotipo Fiscalia Sinaloa">
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-12 b-r">
                    <h1 class="m-t-none m-b">@Resources.LoginResources.ForgotPassword</h1>
                        <p>Ingrese una nueva contraseña para iniciar sesión en el Portal Ciudadano </p>

                    <input type="hidden" id="Id_User" name="Id_User" value="@Model.Id_User" />
                        <span id="error" class="text-danger"></span>
                    <div class="form-group">
                        <label for="passwordExpiration" class="col-md-4 control-label">@Model.ExpirationMessage</label>
                    </div>
                    <div class="form-group">
                        <label for="exampleInputEmail1" class="col-md-4 control-label">@Resources.LoginResources.Password</label>
                        <div class="col-md-8">
                            <input type="password" disabled="disabled" class="form-control" id="Password" name="Password" value="@Model.OldPassword" required />
                        </div>
                        
                    </div>
                    <div class="form-group">
                        <label for="exampleInputPassword1" class="col-md-4 control-label">@Resources.LoginResources.NewPassword</label>
                        <div class="col-md-8">
                            <input type="password" class="form-control" id="NewPassword" name="NewPassword" data-match-error="@Resources.LoginResources.PasswordMatch" required />
                            <div class="help-block with-errors"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="ConfirmPassword" class="col-md-4 control-label">@Resources.LoginResources.ConfirmNewPassword</label>
                        <div class="col-md-8">
                            <input type="password" class="form-control" data-match="#NewPassword" id="ConfirmPassword" name="ConfirmPassword" data-match-error="@Resources.LoginResources.PasswordMatch" required />
                            <div class="help-block with-errors"></div>
                        </div>
                    </div>
                    <div class="form-group">
                        <div id="error-old-password"></div>
                        <button id="save" type="button" class="btn btn-iniciarS m-b">@Resources.Resources.Guardar</button>
                        <button id="cancel" type="button" class="btn btn-danger btn-cancelar">@Resources.Resources.Cancelar</button>
                    </div>
                </div>
            </div>
            }
        </div>
    </div>
</div>
<link href="~/Content/plugins/toastr/toastr.min.css" rel="stylesheet" />
<script src="~/Scripts/plugins/toastr/toastr.min.js"></script>
<script>
    $(document).ready(function () {
        $('#cancel').click(function () {
            callAjax("cancel");
        });

        $('#save').click(function () {
            validatePassword();
        });
    });

	$(document).keypress(function (e) {
        if (e.which == 13) {
            $('#save').click();
        }
    });
	
$(document).keypress(function (e) {
	if (e.which == 13) {
		$('#save').click();
	}
});

function validatePassword() {
        var validator = $("#formPass").validate({
            rules: {
                NewPassword: {
                    required: true,
                    minlength: 8,
                    regex: /^(?=.*[0-9a-zA-Z])(?=.*[!#$%@@&*/()?¡¿_+<>;:,.])[0-9a-zA-Z!#$%@@&*/()?¡¿_+<>;:,.]{8,}/
                },
                ConfirmPassword: {
                    equalTo: "#NewPassword"
                }
            },
            messages: {
                NewPassword: {
                    minlength: " @Resources.Resources.MinLengthPassword",
                    required: " @Resources.Resources.RequiredPassword",
                    regex: " @Resources.Resources.SpecialCharacter"
                },
                ConfirmPassword: " @Resources.Resources.ConfirmPasswordEqual"
            }
        });
        if (validator.form()) {
            callAjax("save");
        }
    }

    function callAjax(accion) {
        $.ajax({
            url: '@Url.Action("UpdatePassword", "Account")',
            type: 'POST',
            data: {
                action: accion,
                iduser: $('#Id_User').val(),
                oldpassword: $('#Password').val(),
                password: $('#NewPassword').val()
            },
            cache: false,
            dataType: "json",
            async: false,
            success: function (result) {
                if (result.valor == 0) {
                    window.location.href = result.href;
                }
                else if (result.valor == 1) {
                    //alert("@Resources.Resources.PasswordModifiedSuccess");
                    showNotification('@Resources.Resources.PasswordModifiedSuccess', "success");
                    window.location.href = result.href;
                }
                else {
                    $('#error').html(result.message);
                }
            },
            error: function (result) {
                showNotification("Error desconocido", "error");
            }
        });
    }
    function showNotification(message, type) {
        switch (type) {
            case "success":
                toastr.success(message, '');
                break;
            case "warning":
                toastr.warning(message, '');
                break;
            case "error":
                toastr.error(message, '');
                break;
        }
        //$.notify(message, type);
    }
</script>

